import React, { useEffect, useState, useCallback } from "react";

import {
	axios,
	useAuth
} from './authorization/ocpRestClient';
import "./FileViewer.css";

const VIEWER_ID = "file-viewer-root";

function FileViewer({ closeDialog, publicationData}) {
  const [bravaApi, setBravaApi] = useState(null);
  const { authService } = useAuth();
  const publicationStatus = "Complete";
  const loadBravaViewer = useCallback(() => {
    axios
      .get(
        process.env.REACT_APP_BASE_SERVICE_URL + "/viewer/api/v1/viewers/brava-view-1.x/loader",
        {
          headers: {
            Authorization: `Bearer ${authService.getAuthTokens().access_token}`
          }
        }
      )
      .then((res) => {
        if (res.data) {
          const scriptEl = document.createElement("script");
          scriptEl.appendChild(document.createTextNode(res.data));
          document.getElementsByTagName("head")[0].appendChild(scriptEl);
        }
      });
  }, [authService]);

  useEffect(() => {
    window.addEventListener("bravaReady", function (event) {
        const currentOrigin = window.location.origin;
        if (event.origin && event.origin !== currentOrigin) {
          return;
        }
        if (event.target && event.target.origin === currentOrigin) {
          window.addEventListener(event["detail"] + "-close", function() {
            closeDialog();
          });
          setBravaApi(window[event["detail"]]);
        }
    });
    loadBravaViewer();
  }, [closeDialog, loadBravaViewer]);

  useEffect(() => {
    if (bravaApi) {
            bravaApi.setHttpHeaders({
              Authorization: `Bearer ${authService.getAuthTokens().access_token}`
            });
            bravaApi.addPublication(publicationData, true);
            bravaApi.render(VIEWER_ID); 
        }
        
  }, [bravaApi, publicationData, authService]);

  if (publicationStatus !== "Complete") {
    return null;
  }

  return <div id={VIEWER_ID}></div>;
};

export default FileViewer;
